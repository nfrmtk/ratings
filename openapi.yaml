openapi: 3.0.3
info:
  title: ratings API
  description: ratings API
  version: 1.0.0
servers:
  - url: 'http://185.231.155.86:8080'
components:
  responses:
    UnauthorizedError:
      description: X-Ratings-User-Ticket key is missing or invalid
  securitySchemes:
    UserTicketAuth:
      type: apiKey
      in: header
      name: X-Ratings-User-Ticket
  schemas:
    review:
      type: object
      properties:
        email:
          required: true
          type: string
        game:
          required: true
          type: string
        rating:
          required: true
          type: integer
        text:
          required: false
          type: string
        created_at:
          required: true
          type: string
          format: date-time
paths:
  /v1/register:
    post:
      description: creates new user
      responses:
        200:
          description: user created
        400:
          description: no email or password provided
        409:
          description: there was user with same email in the system
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  required: true
                password:
                  type: string
                  format: password
                  required: true
                username:
                  type: string
                  required: false
  /v1/login:
    post:
      description: creates new auth session
      responses:
        400:
          description: email or password missing
        401:
          description: wrong password
        200:
          description: uuid created
          content:
            application/json:
              schema:
                type: object
                properties:
                  ticket:
                    type: string
                    format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  required: true
                password:
                  type: string
                  format: password
                  required: true
  /v1/review:
    post:
      security:
        - UserTicketAuth: [ ]
      description: creates new review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game:
                  type: string
                  required: true
                text:
                  type: string
                  required: false
                rating:
                  type: integer
                  required: true
      responses:
        200:
          description: OK, returns time of database row creation
          content:
            text/plain:
              schema:
                description: timing of creation
                type: string
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /v1/reviews:
    get:
      description: returns all reviews matching request
      parameters:
        - name: username
          in: query
          description: username to search for
          required: false
        - name: game
          in: query
          description: game to search for
          required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/review'
    patch:
      security:
        - UserTicketAuth: [ ]
      description: updates specified review. guarantee - new review will not be created
      responses:
        200:
          description: system successfully updated review with given username and game
        400:
          description: there were no review with such username and game or no game name provided
        401:
          $ref: '#/components/responses/UnauthorizedError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game:
                  type: string
                  required: true
                text:
                  type: string
                  required: false
                rating:
                  type: integer
                  required: false

    delete:
      security:
        - UserTicketAuth: [ ]
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
        200:
          description: there was such review in the system, and it was successfully deleted
        400:
          description: there wasn't such review in the system, incorrect request
      description: deletes specified review. post-guarantee - no review with specified email and game-name
      parameters:
        - in: query
          name: game
          required: true
